/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _FUSE_RPC_H_RPCGEN
#define _FUSE_RPC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAX_SIZE 4096

struct getattr_arg {
	char *path;
};
typedef struct getattr_arg getattr_arg;

struct getattr_ret {
	int st_dev;
	int st_ino;
	int st_mode;
	int st_nlink;
	int st_uid;
	int st_gid;
	int st_rdev;
	u_long st_size;
	u_long st_blksize;
	u_long st_blocks;
	long st_atimensec;
	long st_mtimensec;
	long st_ctimensec;
	int ret;
};
typedef struct getattr_ret getattr_ret;

struct access_arg {
	char *path;
	int mask;
};
typedef struct access_arg access_arg;

struct access_ret {
	int ret;
};
typedef struct access_ret access_ret;

struct readdir_arg {
	char *path;
};
typedef struct readdir_arg readdir_arg;

struct readdir_ret {
	int count;
	char entries[MAX_SIZE];
	int ret;
};
typedef struct readdir_ret readdir_ret;

struct opendir_arg {
	char *path;
};
typedef struct opendir_arg opendir_arg;

struct opendir_ret {
	int ret;
};
typedef struct opendir_ret opendir_ret;

#define COMPUTE 456123789
#define COMPUTE_VERS 6

#if defined(__STDC__) || defined(__cplusplus)
#define BB_GETATTR 1
extern  getattr_ret * bb_getattr_6(getattr_arg *, CLIENT *);
extern  getattr_ret * bb_getattr_6_svc(getattr_arg *, struct svc_req *);
#define BB_ACCESS 2
extern  access_ret * bb_access_6(access_arg *, CLIENT *);
extern  access_ret * bb_access_6_svc(access_arg *, struct svc_req *);
#define BB_READDIR 3
extern  readdir_ret * bb_readdir_6(readdir_arg *, CLIENT *);
extern  readdir_ret * bb_readdir_6_svc(readdir_arg *, struct svc_req *);
#define BB_OPENDIR 4
extern  opendir_ret * bb_opendir_6(opendir_arg *, CLIENT *);
extern  opendir_ret * bb_opendir_6_svc(opendir_arg *, struct svc_req *);
extern int compute_6_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define BB_GETATTR 1
extern  getattr_ret * bb_getattr_6();
extern  getattr_ret * bb_getattr_6_svc();
#define BB_ACCESS 2
extern  access_ret * bb_access_6();
extern  access_ret * bb_access_6_svc();
#define BB_READDIR 3
extern  readdir_ret * bb_readdir_6();
extern  readdir_ret * bb_readdir_6_svc();
#define BB_OPENDIR 4
extern  opendir_ret * bb_opendir_6();
extern  opendir_ret * bb_opendir_6_svc();
extern int compute_6_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_getattr_arg (XDR *, getattr_arg*);
extern  bool_t xdr_getattr_ret (XDR *, getattr_ret*);
extern  bool_t xdr_access_arg (XDR *, access_arg*);
extern  bool_t xdr_access_ret (XDR *, access_ret*);
extern  bool_t xdr_readdir_arg (XDR *, readdir_arg*);
extern  bool_t xdr_readdir_ret (XDR *, readdir_ret*);
extern  bool_t xdr_opendir_arg (XDR *, opendir_arg*);
extern  bool_t xdr_opendir_ret (XDR *, opendir_ret*);

#else /* K&R C */
extern bool_t xdr_getattr_arg ();
extern bool_t xdr_getattr_ret ();
extern bool_t xdr_access_arg ();
extern bool_t xdr_access_ret ();
extern bool_t xdr_readdir_arg ();
extern bool_t xdr_readdir_ret ();
extern bool_t xdr_opendir_arg ();
extern bool_t xdr_opendir_ret ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_FUSE_RPC_H_RPCGEN */
